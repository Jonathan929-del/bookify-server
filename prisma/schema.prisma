
// Client and db source
generator client {
  provider = "prisma-client-js"
}
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


// User table
model User {
  id        String   @id @default(cuid())
  name      String
  email     String   @unique
  image     String?
  role      Role     @default(CLIENT)

  // Relations
  services  Service[]
  bookings  Booking[]
  sessions  Session[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}


// User's login session model
model Session {
  id            String   @id @default(cuid())
  userId        String
  tokenId       String   @unique
  user          User     @relation(fields: [userId], references: [id])
  refreshToken  String
  expiresAt     DateTime
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}


// Service model
model Service {
  id          String   @id @default(cuid())
  name        String
  description String?
  category    String

  // Relations
  ownerId String
  owner   User    @relation(fields: [ownerId], references: [id])
  bookings Booking[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([ownerId])
  @@index([category])
}


// Booking model
model Booking {
  id          String   @id @default(cuid())
  date        DateTime
  status      BookingStatus @default(PENDING)

  // Relations
  clientId String
  client   User    @relation(fields: [clientId], references: [id])

  serviceId String
  service   Service @relation(fields: [serviceId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([clientId])
  @@index([serviceId])
  @@index([date])
}


// Boking enum
enum BookingStatus {
  PENDING
  CONFIRMED
  CANCELED
  COMPLETED
}


// Roles enum
enum Role {
  PENDING
  CLIENT
  BUSINESS_OWNER
  ADMIN
}